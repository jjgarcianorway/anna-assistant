# Maintainer: Anna Assistant Team <jjgarcianorway at github>
pkgname=anna-assistant
pkgver=0.12.2
pkgrel=1
pkgdesc="Event-driven Linux system assistant with intelligent automation"
arch=('x86_64' 'aarch64')
url="https://github.com/jjgarcianorway/anna-assistant"
license=('MIT')
depends=('systemd' 'lm_sensors')
makedepends=('rust' 'cargo')
optdepends=(
    'polkit: for privileged operations'
    'sqlite: for telemetry storage'
    'jq: for JSON telemetry queries'
    'asusctl: for ASUS laptop thermal management'
)
backup=(
    'etc/anna/config.toml'
    'etc/anna/policy.toml'
    'etc/anna/policies.d/00-bootstrap.yaml'
)
install=anna-assistant.install
source=("${pkgname}-${pkgver}.tar.gz::https://github.com/jjgarcianorway/anna-assistant/archive/v${pkgver}.tar.gz")
sha256sums=('SKIP')  # Update with actual SHA256 from release

build() {
    cd "${srcdir}/${pkgname}-${pkgver}"
    cargo build --release --locked
}

check() {
    cd "${srcdir}/${pkgname}-${pkgver}"
    cargo test --release --locked || true
}

package() {
    cd "${srcdir}/${pkgname}-${pkgver}"

    # Install binaries
    install -Dm755 "target/release/annad" "${pkgdir}/usr/bin/annad"
    install -Dm755 "target/release/annactl" "${pkgdir}/usr/bin/annactl"

    # Create directories
    install -dm750 "${pkgdir}/var/lib/anna"
    install -dm750 "${pkgdir}/var/log/anna"
    install -dm755 "${pkgdir}/usr/lib/anna"
    install -dm755 "${pkgdir}/etc/anna/policies.d"
    install -dm755 "${pkgdir}/etc/anna/personas.d"

    # Install default configuration
    cat > "${pkgdir}/etc/anna/config.toml" <<'EOF'
# Hi, I'm Anna! Please use 'annactl config set' to change settings.
# Don't edit me by hand - I track who changed what and why.

[autonomy]
level = "low"

[ui]
emojis = false
color = true

[telemetry]
enabled = false
collection_interval_sec = 60

[persona]
active = "dev"
EOF

    # Install bootstrap policies
    cat > "${pkgdir}/etc/anna/policies.d/00-bootstrap.yaml" <<'EOF'
# Hi, I'm Anna! Use 'annactl policy' to manage these rules.

- when: "telemetry.cpu_usage > 90"
  then: "alert"
  message: "High CPU usage"
  enabled: true

- when: "telemetry.mem_usage > 95"
  then: "alert"
  message: "Critical memory"
  enabled: true

- when: "always"
  then: "log"
  message: "Policy engine ready"
  enabled: true
EOF

    # Install systemd service
    if [ -f "etc/systemd/annad.service" ]; then
        install -Dm644 "etc/systemd/annad.service" "${pkgdir}/usr/lib/systemd/system/annad.service"
    fi

    # Install ASUS fan service if available
    if [ -f "etc/systemd/anna-fans.service" ]; then
        install -Dm644 "etc/systemd/anna-fans.service" "${pkgdir}/usr/lib/systemd/system/anna-fans.service"
    fi

    # Install thermal management scripts
    if [ -f "scripts/anna_fans_asus.sh" ]; then
        install -Dm755 "scripts/anna_fans_asus.sh" "${pkgdir}/usr/share/anna/anna_fans_asus.sh"
    fi

    # Install capabilities registry
    if [ -f "etc/CAPABILITIES.toml" ]; then
        install -Dm644 "etc/CAPABILITIES.toml" "${pkgdir}/usr/lib/anna/CAPABILITIES.toml"
    fi

    # Install event policy
    if [ -f "etc/policy.toml" ]; then
        install -Dm644 "etc/policy.toml" "${pkgdir}/etc/anna/policy.toml"
    fi

    # Install thermal policies
    if [ -f "etc/policies.d/thermal.yaml" ]; then
        install -Dm644 "etc/policies.d/thermal.yaml" "${pkgdir}/etc/anna/policies.d/thermal.yaml"
    fi

    # Install documentation
    install -Dm644 "README.md" "${pkgdir}/usr/share/doc/${pkgname}/README.md"
    install -Dm644 "LICENSE" "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE" 2>/dev/null || true
}
